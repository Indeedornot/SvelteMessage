generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:dev.db?connection_limit=1"
}

model User {
    id     Int     @id @default(autoincrement())
    name   String
    avatar String
    status String
    online Boolean @default(false)

    created     Channel[]     @relation("UserCreator")
    channelUser ChannelUser[]

    messages Message[] @relation("Messages")

    currChannel   Channel? @relation("UserCurrChannel", fields: [currChannelId], references: [id])
    currChannelId Int?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Message {
    id   Int    @id @default(autoincrement())
    text String

    sender   User @relation("Messages", fields: [senderId], references: [id])
    senderId Int

    channel   Channel @relation(fields: [channelId], references: [id])
    channelId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model ChannelUser {
    id Int @id @default(autoincrement())

    channel   Channel @relation(fields: [channelId], references: [id])
    channelId Int

    user   User @relation(fields: [userId], references: [id])
    userId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    roles     Role[]

    @@unique([channelId, userId])
}

model Channel {
    id     Int    @id @default(autoincrement())
    name   String
    avatar String

    messages Message[]
    users    ChannelUser[]
    roles    Role[]

    creator   User @relation(fields: [creatorId], references: [id], name: "UserCreator")
    creatorId Int

    currUsers User[] @relation("UserCurrChannel")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Role {
    id     Int     @id @default(autoincrement())
    order  Int
    name   String
    hidden Boolean @default(false)

    channel   Channel @relation(fields: [channelId], references: [id])
    channelId Int

    permissions Bytes
    users       ChannelUser[]

    @@unique([channelId, order])
}
